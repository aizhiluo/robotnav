"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import librav_lcm_msgs.VehicleState

class VehicleEstimations(object):
    __slots__ = ["vehicle_num", "estimations"]

    __typenames__ = ["int64_t", "librav_lcm_msgs.VehicleState"]

    __dimensions__ = [None, ["vehicle_num"]]

    def __init__(self):
        self.vehicle_num = 0
        self.estimations = []

    def encode(self):
        buf = BytesIO()
        buf.write(VehicleEstimations._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">q", self.vehicle_num))
        for i0 in range(self.vehicle_num):
            assert self.estimations[i0]._get_packed_fingerprint() == librav_lcm_msgs.VehicleState._get_packed_fingerprint()
            self.estimations[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != VehicleEstimations._get_packed_fingerprint():
            raise ValueError("Decode error")
        return VehicleEstimations._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = VehicleEstimations()
        self.vehicle_num = struct.unpack(">q", buf.read(8))[0]
        self.estimations = []
        for i0 in range(self.vehicle_num):
            self.estimations.append(librav_lcm_msgs.VehicleState._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if VehicleEstimations in parents: return 0
        newparents = parents + [VehicleEstimations]
        tmphash = (0x5266695341483a6f+ librav_lcm_msgs.VehicleState._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if VehicleEstimations._packed_fingerprint is None:
            VehicleEstimations._packed_fingerprint = struct.pack(">Q", VehicleEstimations._get_hash_recursive([]))
        return VehicleEstimations._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

